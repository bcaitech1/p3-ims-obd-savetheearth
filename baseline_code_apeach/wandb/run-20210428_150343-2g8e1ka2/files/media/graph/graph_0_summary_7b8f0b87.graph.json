{"format": "torch", "nodes": [{"name": "unet", "id": 139714614755408, "class_name": "Unet(\n  (encoder): EfficientNetEncoder(\n    (_conv_stem): Conv2dStaticSamePadding(\n      3, 48, kernel_size=(3, 3), stride=(2, 2), bias=False\n      (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)\n    )\n    (_bn0): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n    (_blocks): ModuleList(\n      (0): MBConvBlock(\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          48, 48, kernel_size=(3, 3), stride=[1, 1], groups=48, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          48, 12, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          12, 48, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          48, 24, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (1): MBConvBlock(\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          24, 6, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          6, 24, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (2): MBConvBlock(\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          24, 6, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          6, 24, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (3): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          144, 144, kernel_size=(3, 3), stride=[2, 2], groups=144, bias=False\n          (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          144, 6, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          6, 144, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (4): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          240, 10, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          10, 240, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (5): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          240, 10, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          10, 240, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (6): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          240, 10, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          10, 240, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (7): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          240, 10, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          10, 240, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (8): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          240, 240, kernel_size=(5, 5), stride=[2, 2], groups=240, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          240, 10, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          10, 240, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          240, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (9): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          384, 16, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          16, 384, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (10): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          384, 16, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          16, 384, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (11): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          384, 16, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          16, 384, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (12): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          384, 16, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          16, 384, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (13): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          384, 384, kernel_size=(3, 3), stride=[2, 2], groups=384, bias=False\n          (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          384, 16, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          16, 384, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (14): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (15): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (16): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (17): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (18): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (19): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (20): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          768, 768, kernel_size=(5, 5), stride=[1, 1], groups=768, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          768, 32, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          32, 768, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          768, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (21): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (22): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (23): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (24): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (25): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (26): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (27): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1056, 1056, kernel_size=(5, 5), stride=[2, 2], groups=1056, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1056, 44, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          44, 1056, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1056, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (28): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (29): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (30): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (31): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (32): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (33): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (34): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (35): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (36): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          1824, 1824, kernel_size=(3, 3), stride=[1, 1], groups=1824, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          1824, 76, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          76, 1824, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          1824, 512, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(512, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (37): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          512, 3072, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          3072, 3072, kernel_size=(3, 3), stride=(1, 1), groups=3072, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          3072, 128, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          128, 3072, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          3072, 512, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(512, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n      (38): MBConvBlock(\n        (_expand_conv): Conv2dStaticSamePadding(\n          512, 3072, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn0): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dStaticSamePadding(\n          3072, 3072, kernel_size=(3, 3), stride=(1, 1), groups=3072, bias=False\n          (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)\n        )\n        (_bn1): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dStaticSamePadding(\n          3072, 128, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_se_expand): Conv2dStaticSamePadding(\n          128, 3072, kernel_size=(1, 1), stride=(1, 1)\n          (static_padding): Identity()\n        )\n        (_project_conv): Conv2dStaticSamePadding(\n          3072, 512, kernel_size=(1, 1), stride=(1, 1), bias=False\n          (static_padding): Identity()\n        )\n        (_bn2): BatchNorm2d(512, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_swish): MemoryEfficientSwish()\n      )\n    )\n    (_conv_head): Conv2dStaticSamePadding(\n      512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False\n      (static_padding): Identity()\n    )\n    (_bn1): BatchNorm2d(2048, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n    (_avg_pooling): AdaptiveAvgPool2d(output_size=1)\n    (_dropout): Dropout(p=0.4, inplace=False)\n    (_swish): MemoryEfficientSwish()\n  )\n  (decoder): UnetDecoder(\n    (center): Identity()\n    (blocks): ModuleList(\n      (0): DecoderBlock(\n        (conv1): Conv2dReLU(\n          (0): Conv2d(688, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention1): Attention(\n          (attention): Identity()\n        )\n        (conv2): Conv2dReLU(\n          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention2): Attention(\n          (attention): Identity()\n        )\n      )\n      (1): DecoderBlock(\n        (conv1): Conv2dReLU(\n          (0): Conv2d(320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention1): Attention(\n          (attention): Identity()\n        )\n        (conv2): Conv2dReLU(\n          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention2): Attention(\n          (attention): Identity()\n        )\n      )\n      (2): DecoderBlock(\n        (conv1): Conv2dReLU(\n          (0): Conv2d(168, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention1): Attention(\n          (attention): Identity()\n        )\n        (conv2): Conv2dReLU(\n          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention2): Attention(\n          (attention): Identity()\n        )\n      )\n      (3): DecoderBlock(\n        (conv1): Conv2dReLU(\n          (0): Conv2d(112, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention1): Attention(\n          (attention): Identity()\n        )\n        (conv2): Conv2dReLU(\n          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention2): Attention(\n          (attention): Identity()\n        )\n      )\n      (4): DecoderBlock(\n        (conv1): Conv2dReLU(\n          (0): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention1): Attention(\n          (attention): Identity()\n        )\n        (conv2): Conv2dReLU(\n          (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n        )\n        (attention2): Attention(\n          (attention): Identity()\n        )\n      )\n    )\n  )\n  (segmentation_head): SegmentationHead(\n    (0): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): Identity()\n    (2): Activation(\n      (activation): Identity()\n    )\n  )\n)", "parameters": [["encoder._conv_stem.weight", [48, 3, 3, 3]], ["encoder._bn0.weight", [48]], ["encoder._bn0.bias", [48]], ["encoder._blocks.0._depthwise_conv.weight", [48, 1, 3, 3]], ["encoder._blocks.0._bn1.weight", [48]], ["encoder._blocks.0._bn1.bias", [48]], ["encoder._blocks.0._se_reduce.weight", [12, 48, 1, 1]], ["encoder._blocks.0._se_reduce.bias", [12]], ["encoder._blocks.0._se_expand.weight", [48, 12, 1, 1]], ["encoder._blocks.0._se_expand.bias", [48]], ["encoder._blocks.0._project_conv.weight", [24, 48, 1, 1]], ["encoder._blocks.0._bn2.weight", [24]], ["encoder._blocks.0._bn2.bias", [24]], ["encoder._blocks.1._depthwise_conv.weight", [24, 1, 3, 3]], ["encoder._blocks.1._bn1.weight", [24]], ["encoder._blocks.1._bn1.bias", [24]], ["encoder._blocks.1._se_reduce.weight", [6, 24, 1, 1]], ["encoder._blocks.1._se_reduce.bias", [6]], ["encoder._blocks.1._se_expand.weight", [24, 6, 1, 1]], ["encoder._blocks.1._se_expand.bias", [24]], ["encoder._blocks.1._project_conv.weight", [24, 24, 1, 1]], ["encoder._blocks.1._bn2.weight", [24]], ["encoder._blocks.1._bn2.bias", [24]], ["encoder._blocks.2._depthwise_conv.weight", [24, 1, 3, 3]], ["encoder._blocks.2._bn1.weight", [24]], ["encoder._blocks.2._bn1.bias", [24]], ["encoder._blocks.2._se_reduce.weight", [6, 24, 1, 1]], ["encoder._blocks.2._se_reduce.bias", [6]], ["encoder._blocks.2._se_expand.weight", [24, 6, 1, 1]], ["encoder._blocks.2._se_expand.bias", [24]], ["encoder._blocks.2._project_conv.weight", [24, 24, 1, 1]], ["encoder._blocks.2._bn2.weight", [24]], ["encoder._blocks.2._bn2.bias", [24]], ["encoder._blocks.3._expand_conv.weight", [144, 24, 1, 1]], ["encoder._blocks.3._bn0.weight", [144]], ["encoder._blocks.3._bn0.bias", [144]], ["encoder._blocks.3._depthwise_conv.weight", [144, 1, 3, 3]], ["encoder._blocks.3._bn1.weight", [144]], ["encoder._blocks.3._bn1.bias", [144]], ["encoder._blocks.3._se_reduce.weight", [6, 144, 1, 1]], ["encoder._blocks.3._se_reduce.bias", [6]], ["encoder._blocks.3._se_expand.weight", [144, 6, 1, 1]], ["encoder._blocks.3._se_expand.bias", [144]], ["encoder._blocks.3._project_conv.weight", [40, 144, 1, 1]], ["encoder._blocks.3._bn2.weight", [40]], ["encoder._blocks.3._bn2.bias", [40]], ["encoder._blocks.4._expand_conv.weight", [240, 40, 1, 1]], ["encoder._blocks.4._bn0.weight", [240]], ["encoder._blocks.4._bn0.bias", [240]], ["encoder._blocks.4._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder._blocks.4._bn1.weight", [240]], ["encoder._blocks.4._bn1.bias", [240]], ["encoder._blocks.4._se_reduce.weight", [10, 240, 1, 1]], ["encoder._blocks.4._se_reduce.bias", [10]], ["encoder._blocks.4._se_expand.weight", [240, 10, 1, 1]], ["encoder._blocks.4._se_expand.bias", [240]], ["encoder._blocks.4._project_conv.weight", [40, 240, 1, 1]], ["encoder._blocks.4._bn2.weight", [40]], ["encoder._blocks.4._bn2.bias", [40]], ["encoder._blocks.5._expand_conv.weight", [240, 40, 1, 1]], ["encoder._blocks.5._bn0.weight", [240]], ["encoder._blocks.5._bn0.bias", [240]], ["encoder._blocks.5._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder._blocks.5._bn1.weight", [240]], ["encoder._blocks.5._bn1.bias", [240]], ["encoder._blocks.5._se_reduce.weight", [10, 240, 1, 1]], ["encoder._blocks.5._se_reduce.bias", [10]], ["encoder._blocks.5._se_expand.weight", [240, 10, 1, 1]], ["encoder._blocks.5._se_expand.bias", [240]], ["encoder._blocks.5._project_conv.weight", [40, 240, 1, 1]], ["encoder._blocks.5._bn2.weight", [40]], ["encoder._blocks.5._bn2.bias", [40]], ["encoder._blocks.6._expand_conv.weight", [240, 40, 1, 1]], ["encoder._blocks.6._bn0.weight", [240]], ["encoder._blocks.6._bn0.bias", [240]], ["encoder._blocks.6._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder._blocks.6._bn1.weight", [240]], ["encoder._blocks.6._bn1.bias", [240]], ["encoder._blocks.6._se_reduce.weight", [10, 240, 1, 1]], ["encoder._blocks.6._se_reduce.bias", [10]], ["encoder._blocks.6._se_expand.weight", [240, 10, 1, 1]], ["encoder._blocks.6._se_expand.bias", [240]], ["encoder._blocks.6._project_conv.weight", [40, 240, 1, 1]], ["encoder._blocks.6._bn2.weight", [40]], ["encoder._blocks.6._bn2.bias", [40]], ["encoder._blocks.7._expand_conv.weight", [240, 40, 1, 1]], ["encoder._blocks.7._bn0.weight", [240]], ["encoder._blocks.7._bn0.bias", [240]], ["encoder._blocks.7._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder._blocks.7._bn1.weight", [240]], ["encoder._blocks.7._bn1.bias", [240]], ["encoder._blocks.7._se_reduce.weight", [10, 240, 1, 1]], ["encoder._blocks.7._se_reduce.bias", [10]], ["encoder._blocks.7._se_expand.weight", [240, 10, 1, 1]], ["encoder._blocks.7._se_expand.bias", [240]], ["encoder._blocks.7._project_conv.weight", [40, 240, 1, 1]], ["encoder._blocks.7._bn2.weight", [40]], ["encoder._blocks.7._bn2.bias", [40]], ["encoder._blocks.8._expand_conv.weight", [240, 40, 1, 1]], ["encoder._blocks.8._bn0.weight", [240]], ["encoder._blocks.8._bn0.bias", [240]], ["encoder._blocks.8._depthwise_conv.weight", [240, 1, 5, 5]], ["encoder._blocks.8._bn1.weight", [240]], ["encoder._blocks.8._bn1.bias", [240]], ["encoder._blocks.8._se_reduce.weight", [10, 240, 1, 1]], ["encoder._blocks.8._se_reduce.bias", [10]], ["encoder._blocks.8._se_expand.weight", [240, 10, 1, 1]], ["encoder._blocks.8._se_expand.bias", [240]], ["encoder._blocks.8._project_conv.weight", [64, 240, 1, 1]], ["encoder._blocks.8._bn2.weight", [64]], ["encoder._blocks.8._bn2.bias", [64]], ["encoder._blocks.9._expand_conv.weight", [384, 64, 1, 1]], ["encoder._blocks.9._bn0.weight", [384]], ["encoder._blocks.9._bn0.bias", [384]], ["encoder._blocks.9._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder._blocks.9._bn1.weight", [384]], ["encoder._blocks.9._bn1.bias", [384]], ["encoder._blocks.9._se_reduce.weight", [16, 384, 1, 1]], ["encoder._blocks.9._se_reduce.bias", [16]], ["encoder._blocks.9._se_expand.weight", [384, 16, 1, 1]], ["encoder._blocks.9._se_expand.bias", [384]], ["encoder._blocks.9._project_conv.weight", [64, 384, 1, 1]], ["encoder._blocks.9._bn2.weight", [64]], ["encoder._blocks.9._bn2.bias", [64]], ["encoder._blocks.10._expand_conv.weight", [384, 64, 1, 1]], ["encoder._blocks.10._bn0.weight", [384]], ["encoder._blocks.10._bn0.bias", [384]], ["encoder._blocks.10._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder._blocks.10._bn1.weight", [384]], ["encoder._blocks.10._bn1.bias", [384]], ["encoder._blocks.10._se_reduce.weight", [16, 384, 1, 1]], ["encoder._blocks.10._se_reduce.bias", [16]], ["encoder._blocks.10._se_expand.weight", [384, 16, 1, 1]], ["encoder._blocks.10._se_expand.bias", [384]], ["encoder._blocks.10._project_conv.weight", [64, 384, 1, 1]], ["encoder._blocks.10._bn2.weight", [64]], ["encoder._blocks.10._bn2.bias", [64]], ["encoder._blocks.11._expand_conv.weight", [384, 64, 1, 1]], ["encoder._blocks.11._bn0.weight", [384]], ["encoder._blocks.11._bn0.bias", [384]], ["encoder._blocks.11._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder._blocks.11._bn1.weight", [384]], ["encoder._blocks.11._bn1.bias", [384]], ["encoder._blocks.11._se_reduce.weight", [16, 384, 1, 1]], ["encoder._blocks.11._se_reduce.bias", [16]], ["encoder._blocks.11._se_expand.weight", [384, 16, 1, 1]], ["encoder._blocks.11._se_expand.bias", [384]], ["encoder._blocks.11._project_conv.weight", [64, 384, 1, 1]], ["encoder._blocks.11._bn2.weight", [64]], ["encoder._blocks.11._bn2.bias", [64]], ["encoder._blocks.12._expand_conv.weight", [384, 64, 1, 1]], ["encoder._blocks.12._bn0.weight", [384]], ["encoder._blocks.12._bn0.bias", [384]], ["encoder._blocks.12._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder._blocks.12._bn1.weight", [384]], ["encoder._blocks.12._bn1.bias", [384]], ["encoder._blocks.12._se_reduce.weight", [16, 384, 1, 1]], ["encoder._blocks.12._se_reduce.bias", [16]], ["encoder._blocks.12._se_expand.weight", [384, 16, 1, 1]], ["encoder._blocks.12._se_expand.bias", [384]], ["encoder._blocks.12._project_conv.weight", [64, 384, 1, 1]], ["encoder._blocks.12._bn2.weight", [64]], ["encoder._blocks.12._bn2.bias", [64]], ["encoder._blocks.13._expand_conv.weight", [384, 64, 1, 1]], ["encoder._blocks.13._bn0.weight", [384]], ["encoder._blocks.13._bn0.bias", [384]], ["encoder._blocks.13._depthwise_conv.weight", [384, 1, 3, 3]], ["encoder._blocks.13._bn1.weight", [384]], ["encoder._blocks.13._bn1.bias", [384]], ["encoder._blocks.13._se_reduce.weight", [16, 384, 1, 1]], ["encoder._blocks.13._se_reduce.bias", [16]], ["encoder._blocks.13._se_expand.weight", [384, 16, 1, 1]], ["encoder._blocks.13._se_expand.bias", [384]], ["encoder._blocks.13._project_conv.weight", [128, 384, 1, 1]], ["encoder._blocks.13._bn2.weight", [128]], ["encoder._blocks.13._bn2.bias", [128]], ["encoder._blocks.14._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.14._bn0.weight", [768]], ["encoder._blocks.14._bn0.bias", [768]], ["encoder._blocks.14._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder._blocks.14._bn1.weight", [768]], ["encoder._blocks.14._bn1.bias", [768]], ["encoder._blocks.14._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.14._se_reduce.bias", [32]], ["encoder._blocks.14._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.14._se_expand.bias", [768]], ["encoder._blocks.14._project_conv.weight", [128, 768, 1, 1]], ["encoder._blocks.14._bn2.weight", [128]], ["encoder._blocks.14._bn2.bias", [128]], ["encoder._blocks.15._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.15._bn0.weight", [768]], ["encoder._blocks.15._bn0.bias", [768]], ["encoder._blocks.15._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder._blocks.15._bn1.weight", [768]], ["encoder._blocks.15._bn1.bias", [768]], ["encoder._blocks.15._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.15._se_reduce.bias", [32]], ["encoder._blocks.15._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.15._se_expand.bias", [768]], ["encoder._blocks.15._project_conv.weight", [128, 768, 1, 1]], ["encoder._blocks.15._bn2.weight", [128]], ["encoder._blocks.15._bn2.bias", [128]], ["encoder._blocks.16._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.16._bn0.weight", [768]], ["encoder._blocks.16._bn0.bias", [768]], ["encoder._blocks.16._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder._blocks.16._bn1.weight", [768]], ["encoder._blocks.16._bn1.bias", [768]], ["encoder._blocks.16._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.16._se_reduce.bias", [32]], ["encoder._blocks.16._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.16._se_expand.bias", [768]], ["encoder._blocks.16._project_conv.weight", [128, 768, 1, 1]], ["encoder._blocks.16._bn2.weight", [128]], ["encoder._blocks.16._bn2.bias", [128]], ["encoder._blocks.17._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.17._bn0.weight", [768]], ["encoder._blocks.17._bn0.bias", [768]], ["encoder._blocks.17._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder._blocks.17._bn1.weight", [768]], ["encoder._blocks.17._bn1.bias", [768]], ["encoder._blocks.17._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.17._se_reduce.bias", [32]], ["encoder._blocks.17._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.17._se_expand.bias", [768]], ["encoder._blocks.17._project_conv.weight", [128, 768, 1, 1]], ["encoder._blocks.17._bn2.weight", [128]], ["encoder._blocks.17._bn2.bias", [128]], ["encoder._blocks.18._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.18._bn0.weight", [768]], ["encoder._blocks.18._bn0.bias", [768]], ["encoder._blocks.18._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder._blocks.18._bn1.weight", [768]], ["encoder._blocks.18._bn1.bias", [768]], ["encoder._blocks.18._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.18._se_reduce.bias", [32]], ["encoder._blocks.18._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.18._se_expand.bias", [768]], ["encoder._blocks.18._project_conv.weight", [128, 768, 1, 1]], ["encoder._blocks.18._bn2.weight", [128]], ["encoder._blocks.18._bn2.bias", [128]], ["encoder._blocks.19._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.19._bn0.weight", [768]], ["encoder._blocks.19._bn0.bias", [768]], ["encoder._blocks.19._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder._blocks.19._bn1.weight", [768]], ["encoder._blocks.19._bn1.bias", [768]], ["encoder._blocks.19._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.19._se_reduce.bias", [32]], ["encoder._blocks.19._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.19._se_expand.bias", [768]], ["encoder._blocks.19._project_conv.weight", [128, 768, 1, 1]], ["encoder._blocks.19._bn2.weight", [128]], ["encoder._blocks.19._bn2.bias", [128]], ["encoder._blocks.20._expand_conv.weight", [768, 128, 1, 1]], ["encoder._blocks.20._bn0.weight", [768]], ["encoder._blocks.20._bn0.bias", [768]], ["encoder._blocks.20._depthwise_conv.weight", [768, 1, 5, 5]], ["encoder._blocks.20._bn1.weight", [768]], ["encoder._blocks.20._bn1.bias", [768]], ["encoder._blocks.20._se_reduce.weight", [32, 768, 1, 1]], ["encoder._blocks.20._se_reduce.bias", [32]], ["encoder._blocks.20._se_expand.weight", [768, 32, 1, 1]], ["encoder._blocks.20._se_expand.bias", [768]], ["encoder._blocks.20._project_conv.weight", [176, 768, 1, 1]], ["encoder._blocks.20._bn2.weight", [176]], ["encoder._blocks.20._bn2.bias", [176]], ["encoder._blocks.21._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.21._bn0.weight", [1056]], ["encoder._blocks.21._bn0.bias", [1056]], ["encoder._blocks.21._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.21._bn1.weight", [1056]], ["encoder._blocks.21._bn1.bias", [1056]], ["encoder._blocks.21._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.21._se_reduce.bias", [44]], ["encoder._blocks.21._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.21._se_expand.bias", [1056]], ["encoder._blocks.21._project_conv.weight", [176, 1056, 1, 1]], ["encoder._blocks.21._bn2.weight", [176]], ["encoder._blocks.21._bn2.bias", [176]], ["encoder._blocks.22._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.22._bn0.weight", [1056]], ["encoder._blocks.22._bn0.bias", [1056]], ["encoder._blocks.22._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.22._bn1.weight", [1056]], ["encoder._blocks.22._bn1.bias", [1056]], ["encoder._blocks.22._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.22._se_reduce.bias", [44]], ["encoder._blocks.22._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.22._se_expand.bias", [1056]], ["encoder._blocks.22._project_conv.weight", [176, 1056, 1, 1]], ["encoder._blocks.22._bn2.weight", [176]], ["encoder._blocks.22._bn2.bias", [176]], ["encoder._blocks.23._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.23._bn0.weight", [1056]], ["encoder._blocks.23._bn0.bias", [1056]], ["encoder._blocks.23._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.23._bn1.weight", [1056]], ["encoder._blocks.23._bn1.bias", [1056]], ["encoder._blocks.23._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.23._se_reduce.bias", [44]], ["encoder._blocks.23._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.23._se_expand.bias", [1056]], ["encoder._blocks.23._project_conv.weight", [176, 1056, 1, 1]], ["encoder._blocks.23._bn2.weight", [176]], ["encoder._blocks.23._bn2.bias", [176]], ["encoder._blocks.24._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.24._bn0.weight", [1056]], ["encoder._blocks.24._bn0.bias", [1056]], ["encoder._blocks.24._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.24._bn1.weight", [1056]], ["encoder._blocks.24._bn1.bias", [1056]], ["encoder._blocks.24._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.24._se_reduce.bias", [44]], ["encoder._blocks.24._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.24._se_expand.bias", [1056]], ["encoder._blocks.24._project_conv.weight", [176, 1056, 1, 1]], ["encoder._blocks.24._bn2.weight", [176]], ["encoder._blocks.24._bn2.bias", [176]], ["encoder._blocks.25._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.25._bn0.weight", [1056]], ["encoder._blocks.25._bn0.bias", [1056]], ["encoder._blocks.25._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.25._bn1.weight", [1056]], ["encoder._blocks.25._bn1.bias", [1056]], ["encoder._blocks.25._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.25._se_reduce.bias", [44]], ["encoder._blocks.25._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.25._se_expand.bias", [1056]], ["encoder._blocks.25._project_conv.weight", [176, 1056, 1, 1]], ["encoder._blocks.25._bn2.weight", [176]], ["encoder._blocks.25._bn2.bias", [176]], ["encoder._blocks.26._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.26._bn0.weight", [1056]], ["encoder._blocks.26._bn0.bias", [1056]], ["encoder._blocks.26._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.26._bn1.weight", [1056]], ["encoder._blocks.26._bn1.bias", [1056]], ["encoder._blocks.26._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.26._se_reduce.bias", [44]], ["encoder._blocks.26._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.26._se_expand.bias", [1056]], ["encoder._blocks.26._project_conv.weight", [176, 1056, 1, 1]], ["encoder._blocks.26._bn2.weight", [176]], ["encoder._blocks.26._bn2.bias", [176]], ["encoder._blocks.27._expand_conv.weight", [1056, 176, 1, 1]], ["encoder._blocks.27._bn0.weight", [1056]], ["encoder._blocks.27._bn0.bias", [1056]], ["encoder._blocks.27._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder._blocks.27._bn1.weight", [1056]], ["encoder._blocks.27._bn1.bias", [1056]], ["encoder._blocks.27._se_reduce.weight", [44, 1056, 1, 1]], ["encoder._blocks.27._se_reduce.bias", [44]], ["encoder._blocks.27._se_expand.weight", [1056, 44, 1, 1]], ["encoder._blocks.27._se_expand.bias", [1056]], ["encoder._blocks.27._project_conv.weight", [304, 1056, 1, 1]], ["encoder._blocks.27._bn2.weight", [304]], ["encoder._blocks.27._bn2.bias", [304]], ["encoder._blocks.28._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.28._bn0.weight", [1824]], ["encoder._blocks.28._bn0.bias", [1824]], ["encoder._blocks.28._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.28._bn1.weight", [1824]], ["encoder._blocks.28._bn1.bias", [1824]], ["encoder._blocks.28._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.28._se_reduce.bias", [76]], ["encoder._blocks.28._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.28._se_expand.bias", [1824]], ["encoder._blocks.28._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.28._bn2.weight", [304]], ["encoder._blocks.28._bn2.bias", [304]], ["encoder._blocks.29._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.29._bn0.weight", [1824]], ["encoder._blocks.29._bn0.bias", [1824]], ["encoder._blocks.29._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.29._bn1.weight", [1824]], ["encoder._blocks.29._bn1.bias", [1824]], ["encoder._blocks.29._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.29._se_reduce.bias", [76]], ["encoder._blocks.29._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.29._se_expand.bias", [1824]], ["encoder._blocks.29._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.29._bn2.weight", [304]], ["encoder._blocks.29._bn2.bias", [304]], ["encoder._blocks.30._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.30._bn0.weight", [1824]], ["encoder._blocks.30._bn0.bias", [1824]], ["encoder._blocks.30._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.30._bn1.weight", [1824]], ["encoder._blocks.30._bn1.bias", [1824]], ["encoder._blocks.30._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.30._se_reduce.bias", [76]], ["encoder._blocks.30._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.30._se_expand.bias", [1824]], ["encoder._blocks.30._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.30._bn2.weight", [304]], ["encoder._blocks.30._bn2.bias", [304]], ["encoder._blocks.31._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.31._bn0.weight", [1824]], ["encoder._blocks.31._bn0.bias", [1824]], ["encoder._blocks.31._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.31._bn1.weight", [1824]], ["encoder._blocks.31._bn1.bias", [1824]], ["encoder._blocks.31._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.31._se_reduce.bias", [76]], ["encoder._blocks.31._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.31._se_expand.bias", [1824]], ["encoder._blocks.31._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.31._bn2.weight", [304]], ["encoder._blocks.31._bn2.bias", [304]], ["encoder._blocks.32._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.32._bn0.weight", [1824]], ["encoder._blocks.32._bn0.bias", [1824]], ["encoder._blocks.32._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.32._bn1.weight", [1824]], ["encoder._blocks.32._bn1.bias", [1824]], ["encoder._blocks.32._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.32._se_reduce.bias", [76]], ["encoder._blocks.32._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.32._se_expand.bias", [1824]], ["encoder._blocks.32._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.32._bn2.weight", [304]], ["encoder._blocks.32._bn2.bias", [304]], ["encoder._blocks.33._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.33._bn0.weight", [1824]], ["encoder._blocks.33._bn0.bias", [1824]], ["encoder._blocks.33._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.33._bn1.weight", [1824]], ["encoder._blocks.33._bn1.bias", [1824]], ["encoder._blocks.33._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.33._se_reduce.bias", [76]], ["encoder._blocks.33._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.33._se_expand.bias", [1824]], ["encoder._blocks.33._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.33._bn2.weight", [304]], ["encoder._blocks.33._bn2.bias", [304]], ["encoder._blocks.34._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.34._bn0.weight", [1824]], ["encoder._blocks.34._bn0.bias", [1824]], ["encoder._blocks.34._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.34._bn1.weight", [1824]], ["encoder._blocks.34._bn1.bias", [1824]], ["encoder._blocks.34._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.34._se_reduce.bias", [76]], ["encoder._blocks.34._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.34._se_expand.bias", [1824]], ["encoder._blocks.34._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.34._bn2.weight", [304]], ["encoder._blocks.34._bn2.bias", [304]], ["encoder._blocks.35._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.35._bn0.weight", [1824]], ["encoder._blocks.35._bn0.bias", [1824]], ["encoder._blocks.35._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder._blocks.35._bn1.weight", [1824]], ["encoder._blocks.35._bn1.bias", [1824]], ["encoder._blocks.35._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.35._se_reduce.bias", [76]], ["encoder._blocks.35._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.35._se_expand.bias", [1824]], ["encoder._blocks.35._project_conv.weight", [304, 1824, 1, 1]], ["encoder._blocks.35._bn2.weight", [304]], ["encoder._blocks.35._bn2.bias", [304]], ["encoder._blocks.36._expand_conv.weight", [1824, 304, 1, 1]], ["encoder._blocks.36._bn0.weight", [1824]], ["encoder._blocks.36._bn0.bias", [1824]], ["encoder._blocks.36._depthwise_conv.weight", [1824, 1, 3, 3]], ["encoder._blocks.36._bn1.weight", [1824]], ["encoder._blocks.36._bn1.bias", [1824]], ["encoder._blocks.36._se_reduce.weight", [76, 1824, 1, 1]], ["encoder._blocks.36._se_reduce.bias", [76]], ["encoder._blocks.36._se_expand.weight", [1824, 76, 1, 1]], ["encoder._blocks.36._se_expand.bias", [1824]], ["encoder._blocks.36._project_conv.weight", [512, 1824, 1, 1]], ["encoder._blocks.36._bn2.weight", [512]], ["encoder._blocks.36._bn2.bias", [512]], ["encoder._blocks.37._expand_conv.weight", [3072, 512, 1, 1]], ["encoder._blocks.37._bn0.weight", [3072]], ["encoder._blocks.37._bn0.bias", [3072]], ["encoder._blocks.37._depthwise_conv.weight", [3072, 1, 3, 3]], ["encoder._blocks.37._bn1.weight", [3072]], ["encoder._blocks.37._bn1.bias", [3072]], ["encoder._blocks.37._se_reduce.weight", [128, 3072, 1, 1]], ["encoder._blocks.37._se_reduce.bias", [128]], ["encoder._blocks.37._se_expand.weight", [3072, 128, 1, 1]], ["encoder._blocks.37._se_expand.bias", [3072]], ["encoder._blocks.37._project_conv.weight", [512, 3072, 1, 1]], ["encoder._blocks.37._bn2.weight", [512]], ["encoder._blocks.37._bn2.bias", [512]], ["encoder._blocks.38._expand_conv.weight", [3072, 512, 1, 1]], ["encoder._blocks.38._bn0.weight", [3072]], ["encoder._blocks.38._bn0.bias", [3072]], ["encoder._blocks.38._depthwise_conv.weight", [3072, 1, 3, 3]], ["encoder._blocks.38._bn1.weight", [3072]], ["encoder._blocks.38._bn1.bias", [3072]], ["encoder._blocks.38._se_reduce.weight", [128, 3072, 1, 1]], ["encoder._blocks.38._se_reduce.bias", [128]], ["encoder._blocks.38._se_expand.weight", [3072, 128, 1, 1]], ["encoder._blocks.38._se_expand.bias", [3072]], ["encoder._blocks.38._project_conv.weight", [512, 3072, 1, 1]], ["encoder._blocks.38._bn2.weight", [512]], ["encoder._blocks.38._bn2.bias", [512]], ["encoder._conv_head.weight", [2048, 512, 1, 1]], ["encoder._bn1.weight", [2048]], ["encoder._bn1.bias", [2048]], ["decoder.blocks.0.conv1.0.weight", [256, 688, 3, 3]], ["decoder.blocks.0.conv1.1.weight", [256]], ["decoder.blocks.0.conv1.1.bias", [256]], ["decoder.blocks.0.conv2.0.weight", [256, 256, 3, 3]], ["decoder.blocks.0.conv2.1.weight", [256]], ["decoder.blocks.0.conv2.1.bias", [256]], ["decoder.blocks.1.conv1.0.weight", [128, 320, 3, 3]], ["decoder.blocks.1.conv1.1.weight", [128]], ["decoder.blocks.1.conv1.1.bias", [128]], ["decoder.blocks.1.conv2.0.weight", [128, 128, 3, 3]], ["decoder.blocks.1.conv2.1.weight", [128]], ["decoder.blocks.1.conv2.1.bias", [128]], ["decoder.blocks.2.conv1.0.weight", [64, 168, 3, 3]], ["decoder.blocks.2.conv1.1.weight", [64]], ["decoder.blocks.2.conv1.1.bias", [64]], ["decoder.blocks.2.conv2.0.weight", [64, 64, 3, 3]], ["decoder.blocks.2.conv2.1.weight", [64]], ["decoder.blocks.2.conv2.1.bias", [64]], ["decoder.blocks.3.conv1.0.weight", [32, 112, 3, 3]], ["decoder.blocks.3.conv1.1.weight", [32]], ["decoder.blocks.3.conv1.1.bias", [32]], ["decoder.blocks.3.conv2.0.weight", [32, 32, 3, 3]], ["decoder.blocks.3.conv2.1.weight", [32]], ["decoder.blocks.3.conv2.1.bias", [32]], ["decoder.blocks.4.conv1.0.weight", [16, 32, 3, 3]], ["decoder.blocks.4.conv1.1.weight", [16]], ["decoder.blocks.4.conv1.1.bias", [16]], ["decoder.blocks.4.conv2.0.weight", [16, 16, 3, 3]], ["decoder.blocks.4.conv2.1.weight", [16]], ["decoder.blocks.4.conv2.1.bias", [16]], ["segmentation_head.0.weight", [12, 16, 3, 3]], ["segmentation_head.0.bias", [12]]], "output_shape": [[8, 12, 512, 512]], "num_parameters": [1296, 48, 48, 432, 48, 48, 576, 12, 576, 48, 1152, 24, 24, 216, 24, 24, 144, 6, 144, 24, 576, 24, 24, 216, 24, 24, 144, 6, 144, 24, 576, 24, 24, 3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 5760, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 6000, 240, 240, 2400, 10, 2400, 240, 15360, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 3456, 384, 384, 6144, 16, 6144, 384, 49152, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 19200, 768, 768, 24576, 32, 24576, 768, 135168, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 321024, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 16416, 1824, 1824, 138624, 76, 138624, 1824, 933888, 512, 512, 1572864, 3072, 3072, 27648, 3072, 3072, 393216, 128, 393216, 3072, 1572864, 512, 512, 1572864, 3072, 3072, 27648, 3072, 3072, 393216, 128, 393216, 3072, 1572864, 512, 512, 1048576, 2048, 2048, 1585152, 256, 256, 589824, 256, 256, 368640, 128, 128, 147456, 128, 128, 96768, 64, 64, 36864, 64, 64, 32256, 32, 32, 9216, 32, 32, 4608, 16, 16, 2304, 16, 16, 1728, 12]}], "edges": []}