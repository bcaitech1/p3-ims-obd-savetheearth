{"format": "torch", "nodes": [{"name": "unet", "id": 140549635600080, "class_name": "EfficientUnet(\n  (encoder): Encoder(\n    (stem_conv): Conv2dSamePadding(3, 48, kernel_size=(3, 3), stride=(2, 2), bias=False)\n    (stem_batch_norm): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n    (stem_swish): Swish()\n    (blocks): ModuleList(\n      (0): MBConvBlock(\n        (swish): Swish()\n        (_depthwise_conv): Conv2dSamePadding(48, 48, kernel_size=(3, 3), stride=[1, 1], groups=48, bias=False)\n        (_bn1): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(48, 12, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(12, 48, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(48, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (1): MBConvBlock(\n        (swish): Swish()\n        (_depthwise_conv): Conv2dSamePadding(24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False)\n        (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(24, 6, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(6, 24, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (2): MBConvBlock(\n        (swish): Swish()\n        (_depthwise_conv): Conv2dSamePadding(24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False)\n        (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(24, 6, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(6, 24, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (3): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(144, 144, kernel_size=(3, 3), stride=[2, 2], groups=144, bias=False)\n        (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(144, 6, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(6, 144, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (4): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False)\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(240, 10, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(10, 240, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (5): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False)\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(240, 10, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(10, 240, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (6): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False)\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(240, 10, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(10, 240, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (7): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(240, 240, kernel_size=(3, 3), stride=(1, 1), groups=240, bias=False)\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(240, 10, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(10, 240, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (8): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(240, 240, kernel_size=(5, 5), stride=[2, 2], groups=240, bias=False)\n        (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(240, 10, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(10, 240, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(240, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (9): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False)\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(384, 16, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(16, 384, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (10): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False)\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(384, 16, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(16, 384, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (11): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False)\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(384, 16, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(16, 384, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (12): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(384, 384, kernel_size=(5, 5), stride=(1, 1), groups=384, bias=False)\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(384, 16, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(16, 384, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (13): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(384, 384, kernel_size=(3, 3), stride=[2, 2], groups=384, bias=False)\n        (_bn1): BatchNorm2d(384, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(384, 16, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(16, 384, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (14): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (15): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (16): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (17): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (18): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (19): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(3, 3), stride=(1, 1), groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(128, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (20): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(128, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(768, 768, kernel_size=(5, 5), stride=[1, 1], groups=768, bias=False)\n        (_bn1): BatchNorm2d(768, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(768, 32, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(32, 768, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(768, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (21): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (22): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (23): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (24): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (25): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (26): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=(1, 1), groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(176, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (27): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(176, 1056, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1056, 1056, kernel_size=(5, 5), stride=[2, 2], groups=1056, bias=False)\n        (_bn1): BatchNorm2d(1056, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1056, 44, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(44, 1056, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1056, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (28): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (29): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (30): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (31): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (32): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (33): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (34): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (35): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(5, 5), stride=(1, 1), groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(304, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (36): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(304, 1824, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(1824, 1824, kernel_size=(3, 3), stride=[1, 1], groups=1824, bias=False)\n        (_bn1): BatchNorm2d(1824, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(1824, 76, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(76, 1824, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(1824, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(512, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (37): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(512, 3072, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(3072, 3072, kernel_size=(3, 3), stride=(1, 1), groups=3072, bias=False)\n        (_bn1): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(3072, 128, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(128, 3072, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(3072, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(512, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n      (38): MBConvBlock(\n        (swish): Swish()\n        (_expand_conv): Conv2dSamePadding(512, 3072, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn0): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_depthwise_conv): Conv2dSamePadding(3072, 3072, kernel_size=(3, 3), stride=(1, 1), groups=3072, bias=False)\n        (_bn1): BatchNorm2d(3072, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n        (_se_reduce): Conv2dSamePadding(3072, 128, kernel_size=(1, 1), stride=(1, 1))\n        (_se_expand): Conv2dSamePadding(128, 3072, kernel_size=(1, 1), stride=(1, 1))\n        (_project_conv): Conv2dSamePadding(3072, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (_bn2): BatchNorm2d(512, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n      )\n    )\n    (head_conv): Conv2dSamePadding(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (head_batch_norm): BatchNorm2d(2048, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n    (head_swish): Swish()\n  )\n  (up_conv1): ConvTranspose2d(2048, 512, kernel_size=(2, 2), stride=(2, 2))\n  (double_conv1): Sequential(\n    (0): Conv2d(640, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): ReLU(inplace=True)\n  )\n  (up_conv2): ConvTranspose2d(512, 256, kernel_size=(2, 2), stride=(2, 2))\n  (double_conv2): Sequential(\n    (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): ReLU(inplace=True)\n  )\n  (up_conv3): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2))\n  (double_conv3): Sequential(\n    (0): Conv2d(168, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): ReLU(inplace=True)\n  )\n  (up_conv4): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2))\n  (double_conv4): Sequential(\n    (0): Conv2d(88, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): ReLU(inplace=True)\n  )\n  (up_conv_input): ConvTranspose2d(64, 32, kernel_size=(2, 2), stride=(2, 2))\n  (double_conv_input): Sequential(\n    (0): Conv2d(35, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): ReLU(inplace=True)\n  )\n  (final_conv): Conv2d(32, 12, kernel_size=(1, 1), stride=(1, 1))\n)", "parameters": [["encoder.stem_conv.weight", [48, 3, 3, 3]], ["encoder.stem_batch_norm.weight", [48]], ["encoder.stem_batch_norm.bias", [48]], ["encoder.blocks.0._depthwise_conv.weight", [48, 1, 3, 3]], ["encoder.blocks.0._bn1.weight", [48]], ["encoder.blocks.0._bn1.bias", [48]], ["encoder.blocks.0._se_reduce.weight", [12, 48, 1, 1]], ["encoder.blocks.0._se_reduce.bias", [12]], ["encoder.blocks.0._se_expand.weight", [48, 12, 1, 1]], ["encoder.blocks.0._se_expand.bias", [48]], ["encoder.blocks.0._project_conv.weight", [24, 48, 1, 1]], ["encoder.blocks.0._bn2.weight", [24]], ["encoder.blocks.0._bn2.bias", [24]], ["encoder.blocks.1._depthwise_conv.weight", [24, 1, 3, 3]], ["encoder.blocks.1._bn1.weight", [24]], ["encoder.blocks.1._bn1.bias", [24]], ["encoder.blocks.1._se_reduce.weight", [6, 24, 1, 1]], ["encoder.blocks.1._se_reduce.bias", [6]], ["encoder.blocks.1._se_expand.weight", [24, 6, 1, 1]], ["encoder.blocks.1._se_expand.bias", [24]], ["encoder.blocks.1._project_conv.weight", [24, 24, 1, 1]], ["encoder.blocks.1._bn2.weight", [24]], ["encoder.blocks.1._bn2.bias", [24]], ["encoder.blocks.2._depthwise_conv.weight", [24, 1, 3, 3]], ["encoder.blocks.2._bn1.weight", [24]], ["encoder.blocks.2._bn1.bias", [24]], ["encoder.blocks.2._se_reduce.weight", [6, 24, 1, 1]], ["encoder.blocks.2._se_reduce.bias", [6]], ["encoder.blocks.2._se_expand.weight", [24, 6, 1, 1]], ["encoder.blocks.2._se_expand.bias", [24]], ["encoder.blocks.2._project_conv.weight", [24, 24, 1, 1]], ["encoder.blocks.2._bn2.weight", [24]], ["encoder.blocks.2._bn2.bias", [24]], ["encoder.blocks.3._expand_conv.weight", [144, 24, 1, 1]], ["encoder.blocks.3._bn0.weight", [144]], ["encoder.blocks.3._bn0.bias", [144]], ["encoder.blocks.3._depthwise_conv.weight", [144, 1, 3, 3]], ["encoder.blocks.3._bn1.weight", [144]], ["encoder.blocks.3._bn1.bias", [144]], ["encoder.blocks.3._se_reduce.weight", [6, 144, 1, 1]], ["encoder.blocks.3._se_reduce.bias", [6]], ["encoder.blocks.3._se_expand.weight", [144, 6, 1, 1]], ["encoder.blocks.3._se_expand.bias", [144]], ["encoder.blocks.3._project_conv.weight", [40, 144, 1, 1]], ["encoder.blocks.3._bn2.weight", [40]], ["encoder.blocks.3._bn2.bias", [40]], ["encoder.blocks.4._expand_conv.weight", [240, 40, 1, 1]], ["encoder.blocks.4._bn0.weight", [240]], ["encoder.blocks.4._bn0.bias", [240]], ["encoder.blocks.4._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder.blocks.4._bn1.weight", [240]], ["encoder.blocks.4._bn1.bias", [240]], ["encoder.blocks.4._se_reduce.weight", [10, 240, 1, 1]], ["encoder.blocks.4._se_reduce.bias", [10]], ["encoder.blocks.4._se_expand.weight", [240, 10, 1, 1]], ["encoder.blocks.4._se_expand.bias", [240]], ["encoder.blocks.4._project_conv.weight", [40, 240, 1, 1]], ["encoder.blocks.4._bn2.weight", [40]], ["encoder.blocks.4._bn2.bias", [40]], ["encoder.blocks.5._expand_conv.weight", [240, 40, 1, 1]], ["encoder.blocks.5._bn0.weight", [240]], ["encoder.blocks.5._bn0.bias", [240]], ["encoder.blocks.5._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder.blocks.5._bn1.weight", [240]], ["encoder.blocks.5._bn1.bias", [240]], ["encoder.blocks.5._se_reduce.weight", [10, 240, 1, 1]], ["encoder.blocks.5._se_reduce.bias", [10]], ["encoder.blocks.5._se_expand.weight", [240, 10, 1, 1]], ["encoder.blocks.5._se_expand.bias", [240]], ["encoder.blocks.5._project_conv.weight", [40, 240, 1, 1]], ["encoder.blocks.5._bn2.weight", [40]], ["encoder.blocks.5._bn2.bias", [40]], ["encoder.blocks.6._expand_conv.weight", [240, 40, 1, 1]], ["encoder.blocks.6._bn0.weight", [240]], ["encoder.blocks.6._bn0.bias", [240]], ["encoder.blocks.6._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder.blocks.6._bn1.weight", [240]], ["encoder.blocks.6._bn1.bias", [240]], ["encoder.blocks.6._se_reduce.weight", [10, 240, 1, 1]], ["encoder.blocks.6._se_reduce.bias", [10]], ["encoder.blocks.6._se_expand.weight", [240, 10, 1, 1]], ["encoder.blocks.6._se_expand.bias", [240]], ["encoder.blocks.6._project_conv.weight", [40, 240, 1, 1]], ["encoder.blocks.6._bn2.weight", [40]], ["encoder.blocks.6._bn2.bias", [40]], ["encoder.blocks.7._expand_conv.weight", [240, 40, 1, 1]], ["encoder.blocks.7._bn0.weight", [240]], ["encoder.blocks.7._bn0.bias", [240]], ["encoder.blocks.7._depthwise_conv.weight", [240, 1, 3, 3]], ["encoder.blocks.7._bn1.weight", [240]], ["encoder.blocks.7._bn1.bias", [240]], ["encoder.blocks.7._se_reduce.weight", [10, 240, 1, 1]], ["encoder.blocks.7._se_reduce.bias", [10]], ["encoder.blocks.7._se_expand.weight", [240, 10, 1, 1]], ["encoder.blocks.7._se_expand.bias", [240]], ["encoder.blocks.7._project_conv.weight", [40, 240, 1, 1]], ["encoder.blocks.7._bn2.weight", [40]], ["encoder.blocks.7._bn2.bias", [40]], ["encoder.blocks.8._expand_conv.weight", [240, 40, 1, 1]], ["encoder.blocks.8._bn0.weight", [240]], ["encoder.blocks.8._bn0.bias", [240]], ["encoder.blocks.8._depthwise_conv.weight", [240, 1, 5, 5]], ["encoder.blocks.8._bn1.weight", [240]], ["encoder.blocks.8._bn1.bias", [240]], ["encoder.blocks.8._se_reduce.weight", [10, 240, 1, 1]], ["encoder.blocks.8._se_reduce.bias", [10]], ["encoder.blocks.8._se_expand.weight", [240, 10, 1, 1]], ["encoder.blocks.8._se_expand.bias", [240]], ["encoder.blocks.8._project_conv.weight", [64, 240, 1, 1]], ["encoder.blocks.8._bn2.weight", [64]], ["encoder.blocks.8._bn2.bias", [64]], ["encoder.blocks.9._expand_conv.weight", [384, 64, 1, 1]], ["encoder.blocks.9._bn0.weight", [384]], ["encoder.blocks.9._bn0.bias", [384]], ["encoder.blocks.9._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder.blocks.9._bn1.weight", [384]], ["encoder.blocks.9._bn1.bias", [384]], ["encoder.blocks.9._se_reduce.weight", [16, 384, 1, 1]], ["encoder.blocks.9._se_reduce.bias", [16]], ["encoder.blocks.9._se_expand.weight", [384, 16, 1, 1]], ["encoder.blocks.9._se_expand.bias", [384]], ["encoder.blocks.9._project_conv.weight", [64, 384, 1, 1]], ["encoder.blocks.9._bn2.weight", [64]], ["encoder.blocks.9._bn2.bias", [64]], ["encoder.blocks.10._expand_conv.weight", [384, 64, 1, 1]], ["encoder.blocks.10._bn0.weight", [384]], ["encoder.blocks.10._bn0.bias", [384]], ["encoder.blocks.10._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder.blocks.10._bn1.weight", [384]], ["encoder.blocks.10._bn1.bias", [384]], ["encoder.blocks.10._se_reduce.weight", [16, 384, 1, 1]], ["encoder.blocks.10._se_reduce.bias", [16]], ["encoder.blocks.10._se_expand.weight", [384, 16, 1, 1]], ["encoder.blocks.10._se_expand.bias", [384]], ["encoder.blocks.10._project_conv.weight", [64, 384, 1, 1]], ["encoder.blocks.10._bn2.weight", [64]], ["encoder.blocks.10._bn2.bias", [64]], ["encoder.blocks.11._expand_conv.weight", [384, 64, 1, 1]], ["encoder.blocks.11._bn0.weight", [384]], ["encoder.blocks.11._bn0.bias", [384]], ["encoder.blocks.11._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder.blocks.11._bn1.weight", [384]], ["encoder.blocks.11._bn1.bias", [384]], ["encoder.blocks.11._se_reduce.weight", [16, 384, 1, 1]], ["encoder.blocks.11._se_reduce.bias", [16]], ["encoder.blocks.11._se_expand.weight", [384, 16, 1, 1]], ["encoder.blocks.11._se_expand.bias", [384]], ["encoder.blocks.11._project_conv.weight", [64, 384, 1, 1]], ["encoder.blocks.11._bn2.weight", [64]], ["encoder.blocks.11._bn2.bias", [64]], ["encoder.blocks.12._expand_conv.weight", [384, 64, 1, 1]], ["encoder.blocks.12._bn0.weight", [384]], ["encoder.blocks.12._bn0.bias", [384]], ["encoder.blocks.12._depthwise_conv.weight", [384, 1, 5, 5]], ["encoder.blocks.12._bn1.weight", [384]], ["encoder.blocks.12._bn1.bias", [384]], ["encoder.blocks.12._se_reduce.weight", [16, 384, 1, 1]], ["encoder.blocks.12._se_reduce.bias", [16]], ["encoder.blocks.12._se_expand.weight", [384, 16, 1, 1]], ["encoder.blocks.12._se_expand.bias", [384]], ["encoder.blocks.12._project_conv.weight", [64, 384, 1, 1]], ["encoder.blocks.12._bn2.weight", [64]], ["encoder.blocks.12._bn2.bias", [64]], ["encoder.blocks.13._expand_conv.weight", [384, 64, 1, 1]], ["encoder.blocks.13._bn0.weight", [384]], ["encoder.blocks.13._bn0.bias", [384]], ["encoder.blocks.13._depthwise_conv.weight", [384, 1, 3, 3]], ["encoder.blocks.13._bn1.weight", [384]], ["encoder.blocks.13._bn1.bias", [384]], ["encoder.blocks.13._se_reduce.weight", [16, 384, 1, 1]], ["encoder.blocks.13._se_reduce.bias", [16]], ["encoder.blocks.13._se_expand.weight", [384, 16, 1, 1]], ["encoder.blocks.13._se_expand.bias", [384]], ["encoder.blocks.13._project_conv.weight", [128, 384, 1, 1]], ["encoder.blocks.13._bn2.weight", [128]], ["encoder.blocks.13._bn2.bias", [128]], ["encoder.blocks.14._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.14._bn0.weight", [768]], ["encoder.blocks.14._bn0.bias", [768]], ["encoder.blocks.14._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder.blocks.14._bn1.weight", [768]], ["encoder.blocks.14._bn1.bias", [768]], ["encoder.blocks.14._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.14._se_reduce.bias", [32]], ["encoder.blocks.14._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.14._se_expand.bias", [768]], ["encoder.blocks.14._project_conv.weight", [128, 768, 1, 1]], ["encoder.blocks.14._bn2.weight", [128]], ["encoder.blocks.14._bn2.bias", [128]], ["encoder.blocks.15._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.15._bn0.weight", [768]], ["encoder.blocks.15._bn0.bias", [768]], ["encoder.blocks.15._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder.blocks.15._bn1.weight", [768]], ["encoder.blocks.15._bn1.bias", [768]], ["encoder.blocks.15._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.15._se_reduce.bias", [32]], ["encoder.blocks.15._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.15._se_expand.bias", [768]], ["encoder.blocks.15._project_conv.weight", [128, 768, 1, 1]], ["encoder.blocks.15._bn2.weight", [128]], ["encoder.blocks.15._bn2.bias", [128]], ["encoder.blocks.16._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.16._bn0.weight", [768]], ["encoder.blocks.16._bn0.bias", [768]], ["encoder.blocks.16._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder.blocks.16._bn1.weight", [768]], ["encoder.blocks.16._bn1.bias", [768]], ["encoder.blocks.16._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.16._se_reduce.bias", [32]], ["encoder.blocks.16._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.16._se_expand.bias", [768]], ["encoder.blocks.16._project_conv.weight", [128, 768, 1, 1]], ["encoder.blocks.16._bn2.weight", [128]], ["encoder.blocks.16._bn2.bias", [128]], ["encoder.blocks.17._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.17._bn0.weight", [768]], ["encoder.blocks.17._bn0.bias", [768]], ["encoder.blocks.17._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder.blocks.17._bn1.weight", [768]], ["encoder.blocks.17._bn1.bias", [768]], ["encoder.blocks.17._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.17._se_reduce.bias", [32]], ["encoder.blocks.17._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.17._se_expand.bias", [768]], ["encoder.blocks.17._project_conv.weight", [128, 768, 1, 1]], ["encoder.blocks.17._bn2.weight", [128]], ["encoder.blocks.17._bn2.bias", [128]], ["encoder.blocks.18._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.18._bn0.weight", [768]], ["encoder.blocks.18._bn0.bias", [768]], ["encoder.blocks.18._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder.blocks.18._bn1.weight", [768]], ["encoder.blocks.18._bn1.bias", [768]], ["encoder.blocks.18._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.18._se_reduce.bias", [32]], ["encoder.blocks.18._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.18._se_expand.bias", [768]], ["encoder.blocks.18._project_conv.weight", [128, 768, 1, 1]], ["encoder.blocks.18._bn2.weight", [128]], ["encoder.blocks.18._bn2.bias", [128]], ["encoder.blocks.19._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.19._bn0.weight", [768]], ["encoder.blocks.19._bn0.bias", [768]], ["encoder.blocks.19._depthwise_conv.weight", [768, 1, 3, 3]], ["encoder.blocks.19._bn1.weight", [768]], ["encoder.blocks.19._bn1.bias", [768]], ["encoder.blocks.19._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.19._se_reduce.bias", [32]], ["encoder.blocks.19._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.19._se_expand.bias", [768]], ["encoder.blocks.19._project_conv.weight", [128, 768, 1, 1]], ["encoder.blocks.19._bn2.weight", [128]], ["encoder.blocks.19._bn2.bias", [128]], ["encoder.blocks.20._expand_conv.weight", [768, 128, 1, 1]], ["encoder.blocks.20._bn0.weight", [768]], ["encoder.blocks.20._bn0.bias", [768]], ["encoder.blocks.20._depthwise_conv.weight", [768, 1, 5, 5]], ["encoder.blocks.20._bn1.weight", [768]], ["encoder.blocks.20._bn1.bias", [768]], ["encoder.blocks.20._se_reduce.weight", [32, 768, 1, 1]], ["encoder.blocks.20._se_reduce.bias", [32]], ["encoder.blocks.20._se_expand.weight", [768, 32, 1, 1]], ["encoder.blocks.20._se_expand.bias", [768]], ["encoder.blocks.20._project_conv.weight", [176, 768, 1, 1]], ["encoder.blocks.20._bn2.weight", [176]], ["encoder.blocks.20._bn2.bias", [176]], ["encoder.blocks.21._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.21._bn0.weight", [1056]], ["encoder.blocks.21._bn0.bias", [1056]], ["encoder.blocks.21._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.21._bn1.weight", [1056]], ["encoder.blocks.21._bn1.bias", [1056]], ["encoder.blocks.21._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.21._se_reduce.bias", [44]], ["encoder.blocks.21._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.21._se_expand.bias", [1056]], ["encoder.blocks.21._project_conv.weight", [176, 1056, 1, 1]], ["encoder.blocks.21._bn2.weight", [176]], ["encoder.blocks.21._bn2.bias", [176]], ["encoder.blocks.22._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.22._bn0.weight", [1056]], ["encoder.blocks.22._bn0.bias", [1056]], ["encoder.blocks.22._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.22._bn1.weight", [1056]], ["encoder.blocks.22._bn1.bias", [1056]], ["encoder.blocks.22._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.22._se_reduce.bias", [44]], ["encoder.blocks.22._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.22._se_expand.bias", [1056]], ["encoder.blocks.22._project_conv.weight", [176, 1056, 1, 1]], ["encoder.blocks.22._bn2.weight", [176]], ["encoder.blocks.22._bn2.bias", [176]], ["encoder.blocks.23._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.23._bn0.weight", [1056]], ["encoder.blocks.23._bn0.bias", [1056]], ["encoder.blocks.23._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.23._bn1.weight", [1056]], ["encoder.blocks.23._bn1.bias", [1056]], ["encoder.blocks.23._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.23._se_reduce.bias", [44]], ["encoder.blocks.23._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.23._se_expand.bias", [1056]], ["encoder.blocks.23._project_conv.weight", [176, 1056, 1, 1]], ["encoder.blocks.23._bn2.weight", [176]], ["encoder.blocks.23._bn2.bias", [176]], ["encoder.blocks.24._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.24._bn0.weight", [1056]], ["encoder.blocks.24._bn0.bias", [1056]], ["encoder.blocks.24._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.24._bn1.weight", [1056]], ["encoder.blocks.24._bn1.bias", [1056]], ["encoder.blocks.24._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.24._se_reduce.bias", [44]], ["encoder.blocks.24._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.24._se_expand.bias", [1056]], ["encoder.blocks.24._project_conv.weight", [176, 1056, 1, 1]], ["encoder.blocks.24._bn2.weight", [176]], ["encoder.blocks.24._bn2.bias", [176]], ["encoder.blocks.25._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.25._bn0.weight", [1056]], ["encoder.blocks.25._bn0.bias", [1056]], ["encoder.blocks.25._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.25._bn1.weight", [1056]], ["encoder.blocks.25._bn1.bias", [1056]], ["encoder.blocks.25._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.25._se_reduce.bias", [44]], ["encoder.blocks.25._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.25._se_expand.bias", [1056]], ["encoder.blocks.25._project_conv.weight", [176, 1056, 1, 1]], ["encoder.blocks.25._bn2.weight", [176]], ["encoder.blocks.25._bn2.bias", [176]], ["encoder.blocks.26._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.26._bn0.weight", [1056]], ["encoder.blocks.26._bn0.bias", [1056]], ["encoder.blocks.26._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.26._bn1.weight", [1056]], ["encoder.blocks.26._bn1.bias", [1056]], ["encoder.blocks.26._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.26._se_reduce.bias", [44]], ["encoder.blocks.26._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.26._se_expand.bias", [1056]], ["encoder.blocks.26._project_conv.weight", [176, 1056, 1, 1]], ["encoder.blocks.26._bn2.weight", [176]], ["encoder.blocks.26._bn2.bias", [176]], ["encoder.blocks.27._expand_conv.weight", [1056, 176, 1, 1]], ["encoder.blocks.27._bn0.weight", [1056]], ["encoder.blocks.27._bn0.bias", [1056]], ["encoder.blocks.27._depthwise_conv.weight", [1056, 1, 5, 5]], ["encoder.blocks.27._bn1.weight", [1056]], ["encoder.blocks.27._bn1.bias", [1056]], ["encoder.blocks.27._se_reduce.weight", [44, 1056, 1, 1]], ["encoder.blocks.27._se_reduce.bias", [44]], ["encoder.blocks.27._se_expand.weight", [1056, 44, 1, 1]], ["encoder.blocks.27._se_expand.bias", [1056]], ["encoder.blocks.27._project_conv.weight", [304, 1056, 1, 1]], ["encoder.blocks.27._bn2.weight", [304]], ["encoder.blocks.27._bn2.bias", [304]], ["encoder.blocks.28._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.28._bn0.weight", [1824]], ["encoder.blocks.28._bn0.bias", [1824]], ["encoder.blocks.28._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.28._bn1.weight", [1824]], ["encoder.blocks.28._bn1.bias", [1824]], ["encoder.blocks.28._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.28._se_reduce.bias", [76]], ["encoder.blocks.28._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.28._se_expand.bias", [1824]], ["encoder.blocks.28._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.28._bn2.weight", [304]], ["encoder.blocks.28._bn2.bias", [304]], ["encoder.blocks.29._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.29._bn0.weight", [1824]], ["encoder.blocks.29._bn0.bias", [1824]], ["encoder.blocks.29._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.29._bn1.weight", [1824]], ["encoder.blocks.29._bn1.bias", [1824]], ["encoder.blocks.29._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.29._se_reduce.bias", [76]], ["encoder.blocks.29._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.29._se_expand.bias", [1824]], ["encoder.blocks.29._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.29._bn2.weight", [304]], ["encoder.blocks.29._bn2.bias", [304]], ["encoder.blocks.30._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.30._bn0.weight", [1824]], ["encoder.blocks.30._bn0.bias", [1824]], ["encoder.blocks.30._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.30._bn1.weight", [1824]], ["encoder.blocks.30._bn1.bias", [1824]], ["encoder.blocks.30._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.30._se_reduce.bias", [76]], ["encoder.blocks.30._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.30._se_expand.bias", [1824]], ["encoder.blocks.30._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.30._bn2.weight", [304]], ["encoder.blocks.30._bn2.bias", [304]], ["encoder.blocks.31._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.31._bn0.weight", [1824]], ["encoder.blocks.31._bn0.bias", [1824]], ["encoder.blocks.31._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.31._bn1.weight", [1824]], ["encoder.blocks.31._bn1.bias", [1824]], ["encoder.blocks.31._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.31._se_reduce.bias", [76]], ["encoder.blocks.31._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.31._se_expand.bias", [1824]], ["encoder.blocks.31._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.31._bn2.weight", [304]], ["encoder.blocks.31._bn2.bias", [304]], ["encoder.blocks.32._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.32._bn0.weight", [1824]], ["encoder.blocks.32._bn0.bias", [1824]], ["encoder.blocks.32._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.32._bn1.weight", [1824]], ["encoder.blocks.32._bn1.bias", [1824]], ["encoder.blocks.32._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.32._se_reduce.bias", [76]], ["encoder.blocks.32._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.32._se_expand.bias", [1824]], ["encoder.blocks.32._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.32._bn2.weight", [304]], ["encoder.blocks.32._bn2.bias", [304]], ["encoder.blocks.33._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.33._bn0.weight", [1824]], ["encoder.blocks.33._bn0.bias", [1824]], ["encoder.blocks.33._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.33._bn1.weight", [1824]], ["encoder.blocks.33._bn1.bias", [1824]], ["encoder.blocks.33._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.33._se_reduce.bias", [76]], ["encoder.blocks.33._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.33._se_expand.bias", [1824]], ["encoder.blocks.33._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.33._bn2.weight", [304]], ["encoder.blocks.33._bn2.bias", [304]], ["encoder.blocks.34._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.34._bn0.weight", [1824]], ["encoder.blocks.34._bn0.bias", [1824]], ["encoder.blocks.34._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.34._bn1.weight", [1824]], ["encoder.blocks.34._bn1.bias", [1824]], ["encoder.blocks.34._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.34._se_reduce.bias", [76]], ["encoder.blocks.34._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.34._se_expand.bias", [1824]], ["encoder.blocks.34._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.34._bn2.weight", [304]], ["encoder.blocks.34._bn2.bias", [304]], ["encoder.blocks.35._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.35._bn0.weight", [1824]], ["encoder.blocks.35._bn0.bias", [1824]], ["encoder.blocks.35._depthwise_conv.weight", [1824, 1, 5, 5]], ["encoder.blocks.35._bn1.weight", [1824]], ["encoder.blocks.35._bn1.bias", [1824]], ["encoder.blocks.35._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.35._se_reduce.bias", [76]], ["encoder.blocks.35._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.35._se_expand.bias", [1824]], ["encoder.blocks.35._project_conv.weight", [304, 1824, 1, 1]], ["encoder.blocks.35._bn2.weight", [304]], ["encoder.blocks.35._bn2.bias", [304]], ["encoder.blocks.36._expand_conv.weight", [1824, 304, 1, 1]], ["encoder.blocks.36._bn0.weight", [1824]], ["encoder.blocks.36._bn0.bias", [1824]], ["encoder.blocks.36._depthwise_conv.weight", [1824, 1, 3, 3]], ["encoder.blocks.36._bn1.weight", [1824]], ["encoder.blocks.36._bn1.bias", [1824]], ["encoder.blocks.36._se_reduce.weight", [76, 1824, 1, 1]], ["encoder.blocks.36._se_reduce.bias", [76]], ["encoder.blocks.36._se_expand.weight", [1824, 76, 1, 1]], ["encoder.blocks.36._se_expand.bias", [1824]], ["encoder.blocks.36._project_conv.weight", [512, 1824, 1, 1]], ["encoder.blocks.36._bn2.weight", [512]], ["encoder.blocks.36._bn2.bias", [512]], ["encoder.blocks.37._expand_conv.weight", [3072, 512, 1, 1]], ["encoder.blocks.37._bn0.weight", [3072]], ["encoder.blocks.37._bn0.bias", [3072]], ["encoder.blocks.37._depthwise_conv.weight", [3072, 1, 3, 3]], ["encoder.blocks.37._bn1.weight", [3072]], ["encoder.blocks.37._bn1.bias", [3072]], ["encoder.blocks.37._se_reduce.weight", [128, 3072, 1, 1]], ["encoder.blocks.37._se_reduce.bias", [128]], ["encoder.blocks.37._se_expand.weight", [3072, 128, 1, 1]], ["encoder.blocks.37._se_expand.bias", [3072]], ["encoder.blocks.37._project_conv.weight", [512, 3072, 1, 1]], ["encoder.blocks.37._bn2.weight", [512]], ["encoder.blocks.37._bn2.bias", [512]], ["encoder.blocks.38._expand_conv.weight", [3072, 512, 1, 1]], ["encoder.blocks.38._bn0.weight", [3072]], ["encoder.blocks.38._bn0.bias", [3072]], ["encoder.blocks.38._depthwise_conv.weight", [3072, 1, 3, 3]], ["encoder.blocks.38._bn1.weight", [3072]], ["encoder.blocks.38._bn1.bias", [3072]], ["encoder.blocks.38._se_reduce.weight", [128, 3072, 1, 1]], ["encoder.blocks.38._se_reduce.bias", [128]], ["encoder.blocks.38._se_expand.weight", [3072, 128, 1, 1]], ["encoder.blocks.38._se_expand.bias", [3072]], ["encoder.blocks.38._project_conv.weight", [512, 3072, 1, 1]], ["encoder.blocks.38._bn2.weight", [512]], ["encoder.blocks.38._bn2.bias", [512]], ["encoder.head_conv.weight", [2048, 512, 1, 1]], ["encoder.head_batch_norm.weight", [2048]], ["encoder.head_batch_norm.bias", [2048]], ["up_conv1.weight", [2048, 512, 2, 2]], ["up_conv1.bias", [512]], ["double_conv1.0.weight", [512, 640, 3, 3]], ["double_conv1.0.bias", [512]], ["double_conv1.1.weight", [512]], ["double_conv1.1.bias", [512]], ["double_conv1.3.weight", [512, 512, 3, 3]], ["double_conv1.3.bias", [512]], ["double_conv1.4.weight", [512]], ["double_conv1.4.bias", [512]], ["up_conv2.weight", [512, 256, 2, 2]], ["up_conv2.bias", [256]], ["double_conv2.0.weight", [256, 320, 3, 3]], ["double_conv2.0.bias", [256]], ["double_conv2.1.weight", [256]], ["double_conv2.1.bias", [256]], ["double_conv2.3.weight", [256, 256, 3, 3]], ["double_conv2.3.bias", [256]], ["double_conv2.4.weight", [256]], ["double_conv2.4.bias", [256]], ["up_conv3.weight", [256, 128, 2, 2]], ["up_conv3.bias", [128]], ["double_conv3.0.weight", [128, 168, 3, 3]], ["double_conv3.0.bias", [128]], ["double_conv3.1.weight", [128]], ["double_conv3.1.bias", [128]], ["double_conv3.3.weight", [128, 128, 3, 3]], ["double_conv3.3.bias", [128]], ["double_conv3.4.weight", [128]], ["double_conv3.4.bias", [128]], ["up_conv4.weight", [128, 64, 2, 2]], ["up_conv4.bias", [64]], ["double_conv4.0.weight", [64, 88, 3, 3]], ["double_conv4.0.bias", [64]], ["double_conv4.1.weight", [64]], ["double_conv4.1.bias", [64]], ["double_conv4.3.weight", [64, 64, 3, 3]], ["double_conv4.3.bias", [64]], ["double_conv4.4.weight", [64]], ["double_conv4.4.bias", [64]], ["up_conv_input.weight", [64, 32, 2, 2]], ["up_conv_input.bias", [32]], ["double_conv_input.0.weight", [32, 35, 3, 3]], ["double_conv_input.0.bias", [32]], ["double_conv_input.1.weight", [32]], ["double_conv_input.1.bias", [32]], ["double_conv_input.3.weight", [32, 32, 3, 3]], ["double_conv_input.3.bias", [32]], ["double_conv_input.4.weight", [32]], ["double_conv_input.4.bias", [32]], ["final_conv.weight", [12, 32, 1, 1]], ["final_conv.bias", [12]]], "output_shape": [[4, 12, 512, 512]], "num_parameters": [1296, 48, 48, 432, 48, 48, 576, 12, 576, 48, 1152, 24, 24, 216, 24, 24, 144, 6, 144, 24, 576, 24, 24, 216, 24, 24, 144, 6, 144, 24, 576, 24, 24, 3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 5760, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 2160, 240, 240, 2400, 10, 2400, 240, 9600, 40, 40, 9600, 240, 240, 6000, 240, 240, 2400, 10, 2400, 240, 15360, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 9600, 384, 384, 6144, 16, 6144, 384, 24576, 64, 64, 24576, 384, 384, 3456, 384, 384, 6144, 16, 6144, 384, 49152, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 6912, 768, 768, 24576, 32, 24576, 768, 98304, 128, 128, 98304, 768, 768, 19200, 768, 768, 24576, 32, 24576, 768, 135168, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 185856, 176, 176, 185856, 1056, 1056, 26400, 1056, 1056, 46464, 44, 46464, 1056, 321024, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 45600, 1824, 1824, 138624, 76, 138624, 1824, 554496, 304, 304, 554496, 1824, 1824, 16416, 1824, 1824, 138624, 76, 138624, 1824, 933888, 512, 512, 1572864, 3072, 3072, 27648, 3072, 3072, 393216, 128, 393216, 3072, 1572864, 512, 512, 1572864, 3072, 3072, 27648, 3072, 3072, 393216, 128, 393216, 3072, 1572864, 512, 512, 1048576, 2048, 2048, 4194304, 512, 2949120, 512, 512, 512, 2359296, 512, 512, 512, 524288, 256, 737280, 256, 256, 256, 589824, 256, 256, 256, 131072, 128, 193536, 128, 128, 128, 147456, 128, 128, 128, 32768, 64, 50688, 64, 64, 64, 36864, 64, 64, 64, 8192, 32, 10080, 32, 32, 32, 9216, 32, 32, 32, 384, 12]}], "edges": []}